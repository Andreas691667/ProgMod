class RobotArm

instance variables
    qt : real; -- target angle
    public q : seq of real; --current angle
    public dq : seq of real; --derivative (velocity)
    public ddq : seq of real; --double dericative (acceleration)

values
    N1 : real = 0; -- lower bound
    N2 : real = 3.14/4; --upper bound

operations
    public RobotArm: () ==> RobotArm
    RobotArm() == (
        -- initialize variables
        qt := 3.14/8;
        q := [0];
        dq := [0];
        ddq := [0];
    );

    -- step function
    public Step : (real) ==> ()
    Step(Delta) == duration(0) (
        
        --fetch values
        dcl current_angle : real := hd q;
        dcl before_angle : real := hd (tl q);

        -- update derivative
        dcl delta_q : real := current_angle - before_angle;
        dcl next_angle : real := current_angle + delta_q*Delta;

        -- update variables
        dq := [delta_q] ^ dq;
        q := [next_angle] ^ q;
    );

    -- TODO move arm methods 
    
    -- Move arm to given angle (input)
    -- public MoveArm : (real) ==> () 
    -- MoveArm(theta) == duration(0) (        
    --     -- Pass
    -- );

    -- Move arm to target angle. 
    -- public MoveArm : () ==> ()
    -- MoveArm() == duration(0) (

    -- );

    

    -- TODO set target angle method 
    public SetTargetAngle : (real) ==> () 
    SetTargetAngle(theta) == duration(0) (
        qt := theta;
    );

end RobotArm