class World

instance variables
    current_time : real := 0;
    
operations

    private UpdateTimeStamp :() ==> ()
    UpdateTimeStamp() == duration(0) (
        current_time := time/1e9;
    );

    public Scenario0 : () ==> bool
    Scenario0() == (
        MySystem`ctl.SetTargetAngle(3.14/4);
        MySystem`ctl.UpdateVelocity();
        UpdateTimeStamp();
        duration(3e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();


        return true;
    );


    public Scenario1 : () ==> bool
    Scenario1() == (
        MySystem`ctl.SetTargetAngle(3.14/4);
        MySystem`ctl.UpdateVelocity();
        duration(3e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(5e9)skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(5e9)skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        return true;
    );
    
    public Scenario2 : () ==> bool
    Scenario2() == (
        MySystem`ctl.SetTargetAngle(3.14/2);
        MySystem`ctl.UpdateVelocity();
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        return true;
    );

    public Scenario3 : () ==> bool
    Scenario3() == (
        MySystem`ctl.SetTargetAngle(0);
        MySystem`ctl.UpdateVelocity();
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        return true;
    );

    public Scenario4 : () ==> bool
    Scenario4() == (
        MySystem`ctl.SetTargetAngle(0.8);
        MySystem`ctl.UpdateVelocity();
        duration(5e9)skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(5e9)skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
         MySystem`ctl.UpdateVelocity();
        duration(5e9)skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        return true;
    );

    public Scenario5 : () ==> bool
    Scenario5() == (
        MySystem`ctl.SetTargetAngle(3.14/8);
        MySystem`ctl.UpdateVelocity();
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();        
        MySystem`ctl.UpdateVelocity();          
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(7e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        return true;
    );

    public Scenario6 : () ==> bool 
    Scenario6() == (
        MySystem`ctl.SetTargetAngle(3.14/4);
        MySystem`ctl.UpdateVelocity();
        duration(4e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(4e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        duration(4e9) skip;
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();        
        MySystem`ctl.UpdateVelocity();        
        duration(2e9) skip;
        MySystem`env.Step();        
        MySystem`ctl.MonitorArm();        
        MySystem`ctl.UpdateVelocity();        
        return true;
    );

    public Scenario7 : () ==> bool
    Scenario7() == (
        MySystem`ctl.SetTargetAngle(3.14/4);
        MySystem`ctl.UpdateVelocity();
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        MySystem`env.Step();
        MySystem`ctl.MonitorArm();
        MySystem`ctl.UpdateVelocity();
        return true;
    );

end World