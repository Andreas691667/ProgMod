class RobotArm

instance variables
    qt : real; -- target angle
    public q : real; --current angle (radians)
    public dq : real; --derivative (velocity)

values
    N1 : real = 0;      -- lower bound
    N2 : real = 3.14/2; -- upper bound
    K : real = 0.2;       -- Coefficient for updating velocity. 

operations
    public RobotArm: () ==> RobotArm
    RobotArm() == (
        -- initialize variables
        qt := 0;
        q := 0;
        dq := 0;
    );

    public RobotArm: (real) ==> RobotArm
    -- pre(real < N2) and (real > N1);
    RobotArm(theta) ==     
    (
        -- initialize variables
        qt := 0;
        q := theta;
        dq := 0;
    );

    -- step function
    public Step : (real) ==> ()
    Step(TimeStep) == duration(0) (        
        q := q + dq * TimeStep;
        
    )
    post (q <= N2) and (q >= N1);

    -- TODO move arm methods 
    
    -- Move arm to given angle (input)
    public UpdateVelocity : () ==> () 
    UpdateVelocity() == duration(0) (
        dq := (qt-q) * K;
    );

    -- TODO set target angle method 
    public SetTargetAngle : (real) ==> () 
    SetTargetAngle(theta) == duration(0) (
        qt := theta;
    );

end RobotArm