class RobotController

instance variables
    public ctl_qt : real;   -- target angle
    public ctl_q : real;    -- current angle (radians)
    public ctl_dq : real;   -- derivative (velocity)

values
    N1 : real = 0;          -- lower bound //operation range
    N2 : real = 3.14/2;     -- upper bound //operation range
    K  : real = 0.2;        -- proportionality coefficient for updating velocity. 

operations
    public RobotController: () ==> RobotController
    RobotController() == (
        -- initilialize variables
        ctl_dq := 0;
        ctl_q := 0;
        ctl_qt := 0;
    );

    -- update velocity based on error and position of arm
    public UpdateVelocity : () ==> () 
    UpdateVelocity() == duration(0) (
        ctl_dq := (ctl_qt-ctl_q) * K;   
        MySystem`env.env_dq := ctl_dq;     
    );

    -- set target angle method 
    public SetTargetAngle : (real) ==> () 
    SetTargetAngle(theta) == duration(0) (
        ctl_qt := theta;
    )
    pre theta >= N1 and theta <= N2;

    -- Update variables from the environment. Duration probably not 0. 
    public MonitorArm : () ==> ()
    MonitorArm() == duration(0) (
        ctl_q := MySystem`env.env_q;
    );

end RobotController